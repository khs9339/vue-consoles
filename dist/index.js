const defaultOpt={currentEnv:'local',prefix:['_ENV_'],console:['log','info','debug','warn','error'],buildEnv:{local:!0}};export default{install(a,b){const c=Object.assign(defaultOpt,b);try{if(!console)throw new Error('Not Found Window Console');if(!c.buildEnv[c.currentEnv])throw new Error('This Environment is not available');const b=chgPreFix(c),d=!0===c.buildEnv[c.currentEnv]?c.console:c.buildEnv[c.currentEnv];c.console.forEach(c=>{Object.defineProperty(a.prototype,`$${c}`,{enumerable:!1,configurable:!1,get(){return d.includes(c)?console[c].bind(this,...b,'::',c.toUpperCase(),'::'):()=>{}}})})}catch(b){c.console.forEach(b=>{a.prototype[`$${b}`]=(a='')=>{}})}}};function chgPreFix({prefix:a,currentEnv:b}){return(a||[]).map(a=>('_ENV_'===a?a=b.toUpperCase():'_TIME_'===a?a=new Date().toJSON():void 0,a))}
